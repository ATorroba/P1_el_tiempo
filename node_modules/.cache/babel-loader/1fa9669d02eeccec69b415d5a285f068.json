{"ast":null,"code":"var _jsxFileName = \"/Users/alvarotorrobadelinos/Desktop/Universidad/4\\xBA/IWEB/Practicas/P1/P1_el_tiempo/src/Resultados.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Resultados(props) {\n  async function fetchim(queryparams) {\n    try {\n      let url = \"http://openweathermap.org/img/wn/\";\n      const response = await fetch(`${url}{${queryparams}}.png`);\n    } catch (e) {\n      console.log();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Timezone:\", props.items.timezone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"El tiempo en los pr\\xF3ximos d\\xEDas ser\\xE1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"resultados\",\n      children: props.items.daily.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(item.dt * 1000).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"tiempoimg\",\n            alt: \"\",\n            src: fetchim(item.weather.icon)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temp: \", (item.temp.day - 273.15).toFixed(2), \"\\xBAC \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humedad: \", item.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Viento: \", item.wind_speed, \"m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)).slice(0, props.numitems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}\n_c = Resultados;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resultados\");","map":{"version":3,"names":["Resultados","props","fetchim","queryparams","url","response","fetch","e","console","log","items","timezone","daily","map","item","Date","dt","toLocaleDateString","weather","icon","temp","day","toFixed","humidity","wind_speed","slice","numitems"],"sources":["/Users/alvarotorrobadelinos/Desktop/Universidad/4º/IWEB/Practicas/P1/P1_el_tiempo/src/Resultados.js"],"sourcesContent":["export default function Resultados(props) {\n  async function fetchim(queryparams){\n    try{\n      let url = \"http://openweathermap.org/img/wn/\";\n      const response = await fetch(`${url}{${queryparams}}.png`);\n    }catch(e){\n      console.log()\n    }\n  }\n    return (<div>\n      <h3>Timezone:{props.items.timezone}</h3>\n      <h4>El tiempo en los próximos días será:</h4>\n         <ul id=\"resultados\">\n          {props.items.daily.map((item) => (\n            <li>\n              <p>{new Date(item.dt * 1000).toLocaleDateString()}</p>\n              <p><img className=\"tiempoimg\" alt=\"\" src={fetchim(item.weather.icon)} /></p>\n              <p>Temp: {(item.temp.day -273.15).toFixed(2)}ºC </p>\n              <p>Humedad: {item.humidity}%</p>\n              <p>Viento: {item.wind_speed}m/s</p>\n            </li>\n          )).slice(0,props.numitems)}\n        </ul>\n      </div>);\n}"],"mappings":";;AAAA,eAAe,SAASA,UAAT,CAAoBC,KAApB,EAA2B;EACxC,eAAeC,OAAf,CAAuBC,WAAvB,EAAmC;IACjC,IAAG;MACD,IAAIC,GAAG,GAAG,mCAAV;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,GAAI,IAAGD,WAAY,OAAvB,CAA5B;IACD,CAHD,CAGC,OAAMI,CAAN,EAAQ;MACPC,OAAO,CAACC,GAAR;IACD;EACF;;EACC,oBAAQ;IAAA,wBACN;MAAA,wBAAcR,KAAK,CAACS,KAAN,CAAYC,QAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QADM,eAEN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFM,eAGH;MAAI,EAAE,EAAC,YAAP;MAAA,UACEV,KAAK,CAACS,KAAN,CAAYE,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,iBACrB;QAAA,wBACE;UAAA,UAAI,IAAIC,IAAJ,CAASD,IAAI,CAACE,EAAL,GAAU,IAAnB,EAAyBC,kBAAzB;QAAJ;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,uBAAG;YAAK,SAAS,EAAC,WAAf;YAA2B,GAAG,EAAC,EAA/B;YAAkC,GAAG,EAAEf,OAAO,CAACY,IAAI,CAACI,OAAL,CAAaC,IAAd;UAA9C;YAAA;YAAA;YAAA;UAAA;QAAH;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,qBAAU,CAACL,IAAI,CAACM,IAAL,CAAUC,GAAV,GAAe,MAAhB,EAAwBC,OAAxB,CAAgC,CAAhC,CAAV;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAA,wBAAaR,IAAI,CAACS,QAAlB;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA,uBAAYT,IAAI,CAACU,UAAjB;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,EAQEC,KARF,CAQQ,CARR,EAQUxB,KAAK,CAACyB,QARhB;IADF;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AAeH;KAxBuB1B,U"},"metadata":{},"sourceType":"module"}