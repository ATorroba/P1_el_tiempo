{"ast":null,"code":"var _jsxFileName = \"/Users/alvarotorrobadelinos/Desktop/Universidad/4\\xBA/IWEB/Practicas/P1/P1_el_tiempo/src/Resultados.js\";\nimport { isContentEditable } from \"@testing-library/user-event/dist/utils\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Resultados(props) {\n  // async function fetchim(queryparams){\n  //   try{\n  //     let url = \"http://openweathermap.org/img/wn/\";\n  //     const response = await fetch(`${url}{${queryparams}}.png`);\n  //     const data = await response.json();    \n  //   }catch(e){\n  //     console.log(error)\n  //   }\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Timezone:\", props.items.timezone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"El tiempo en los pr\\xF3ximos d\\xEDas ser\\xE1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"resultados\",\n      children: props.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(item.daily.dt * 1000).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), console.log(item.weather.icon), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"tiempoimg\",\n            alt: \"\",\n            src: \"http://openweathermap.org/img/wn/\" + item.weather.icon + \".png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temp: \", (item.daily.temp.day - 273.15).toFixed(2), \"\\xBAC \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humedad: \", item.daily.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Viento: \", item.daily.wind_speed, \"m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)).slice(0, props.numitems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this);\n}\n_c = Resultados;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resultados\");","map":{"version":3,"names":["isContentEditable","useState","Resultados","props","items","timezone","map","item","Date","daily","dt","toLocaleDateString","console","log","weather","icon","temp","day","toFixed","humidity","wind_speed","slice","numitems"],"sources":["/Users/alvarotorrobadelinos/Desktop/Universidad/4º/IWEB/Practicas/P1/P1_el_tiempo/src/Resultados.js"],"sourcesContent":["import { isContentEditable } from \"@testing-library/user-event/dist/utils\";\nimport { useState } from \"react\";\n\nexport default function Resultados(props) {\n  \n  // async function fetchim(queryparams){\n  //   try{\n  //     let url = \"http://openweathermap.org/img/wn/\";\n  //     const response = await fetch(`${url}{${queryparams}}.png`);\n  //     const data = await response.json();    \n  //   }catch(e){\n  //     console.log(error)\n  //   }\n  // }\n    return (<div>\n      <h3>Timezone:{props.items.timezone}</h3>\n      <h4>El tiempo en los próximos días será:</h4>\n         <ul id=\"resultados\">\n          {props.items.map((item) => (\n            <li>\n              <p>{new Date(item.daily.dt * 1000).toLocaleDateString()}</p>\n              {console.log(item.weather.icon)}\n              <p><img className=\"tiempoimg\" alt=\"\" src={\"http://openweathermap.org/img/wn/\"+item.weather.icon+\".png\"} /></p>\n              <p>Temp: {(item.daily.temp.day -273.15).toFixed(2)}ºC </p>\n              <p>Humedad: {item.daily.humidity}%</p>\n              <p>Viento: {item.daily.wind_speed}m/s</p>\n            </li>\n          )).slice(0,props.numitems)}\n        </ul>\n      </div>);\n}"],"mappings":";AAAA,SAASA,iBAAT,QAAkC,wCAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,oBAAQ;IAAA,wBACN;MAAA,wBAAcA,KAAK,CAACC,KAAN,CAAYC,QAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QADM,eAEN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFM,eAGH;MAAI,EAAE,EAAC,YAAP;MAAA,UACEF,KAAK,CAACC,KAAN,CAAYE,GAAZ,CAAiBC,IAAD,iBACf;QAAA,wBACE;UAAA,UAAI,IAAIC,IAAJ,CAASD,IAAI,CAACE,KAAL,CAAWC,EAAX,GAAgB,IAAzB,EAA+BC,kBAA/B;QAAJ;UAAA;UAAA;UAAA;QAAA,QADF,EAEGC,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,OAAL,CAAaC,IAAzB,CAFH,eAGE;UAAA,uBAAG;YAAK,SAAS,EAAC,WAAf;YAA2B,GAAG,EAAC,EAA/B;YAAkC,GAAG,EAAE,sCAAoCR,IAAI,CAACO,OAAL,CAAaC,IAAjD,GAAsD;UAA7F;YAAA;YAAA;YAAA;UAAA;QAAH;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAA,qBAAU,CAACR,IAAI,CAACE,KAAL,CAAWO,IAAX,CAAgBC,GAAhB,GAAqB,MAAtB,EAA8BC,OAA9B,CAAsC,CAAtC,CAAV;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA,wBAAaX,IAAI,CAACE,KAAL,CAAWU,QAAxB;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA,uBAAYZ,IAAI,CAACE,KAAL,CAAWW,UAAvB;QAAA;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,EASEC,KATF,CASQ,CATR,EASUlB,KAAK,CAACmB,QAThB;IADF;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AAgBH;KA3BuBpB,U"},"metadata":{},"sourceType":"module"}